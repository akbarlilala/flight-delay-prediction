# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10cLzwrU-JatsI4FK-KZoFgGF2Qn_8HAv
"""

!pip install pandas numpy scikit-learn tensorflow --quiet

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.metrics import confusion_matrix, accuracy_score
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

df = pd.read_csv("/content/flights_sampled.csv")

X = df.drop("SignificantDelay", axis=1)
y = df["SignificantDelay"]

categorical_cols = ["Marketing_Airline_Network", "Origin", "Dest"]
numeric_cols = ["DepHour"]

encoder = OneHotEncoder(sparse_output=False)
X_cat = encoder.fit_transform(X[categorical_cols])

scaler = StandardScaler()
X_num = scaler.fit_transform(X[numeric_cols])

X_all = np.hstack([X_cat, X_num])

X_train, X_test, y_train, y_test = train_test_split(X_all, y, test_size=0.3, random_state=42)

X_train = X_train.reshape((X_train.shape[0], 1, X_train.shape[1]))
X_test = X_test.reshape((X_test.shape[0], 1, X_test.shape[1]))

# LSTM
model = Sequential()
model.add(LSTM(32, input_shape=(1, X_train.shape[2])))
model.add(Dense(1, activation="sigmoid"))

model.compile(optimizer="adam", loss="binary_crossentropy", metrics=["accuracy"])

history = model.fit(X_train, y_train, epochs=5, batch_size=64, validation_split=0.2)

y_pred_probs = model.predict(X_test)
y_pred = (y_pred_probs > 0.5).astype(int)

conf_matrix = confusion_matrix(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)

print("Confusion Matrix:\n", conf_matrix)
print("LSTM Accuracy: {:.2f}%".format(accuracy * 100))

import matplotlib.pyplot as plt

plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Val Accuracy')
plt.title('LSTM Training Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend()

plt.figure()
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Val Loss')
plt.title('LSTM Training Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend()


from google.colab import files
files.download('paper_code.py')